"""User model extension

Revision ID: b08e9c9e9dbc
Revises: c09f7a844db0
Create Date: 2023-12-13 00:16:02.592431

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "b08e9c9e9dbc"
down_revision: Union[str, None] = "c09f7a844db0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


gender_enum = postgresql.ENUM(
    "male", "female", "other", "not_specified", name="gender", create_type=True
)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    gender_enum.create(conn)

    op.add_column(
        "user",
        sa.Column("job_title", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column(
        "user",
        sa.Column("personal_title", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column("user", sa.Column("date_of_birth", sa.Date(), nullable=True))
    op.add_column("user", sa.Column("latitude", sa.Float(), nullable=True))
    op.add_column("user", sa.Column("longitude", sa.Float(), nullable=True))
    op.add_column(
        "user",
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column(
        "user",
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column("user", sa.Column("gender", gender_enum, nullable=True))

    op.add_column(
        "user",
        sa.Column(
            "profile_photo_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
    )
    op.add_column(
        "user", sa.Column("timezone", sqlmodel.sql.sqltypes.AutoString(), nullable=True)
    )
    op.add_column(
        "user", sa.Column("language", sqlmodel.sql.sqltypes.AutoString(), nullable=True)
    )
    op.add_column(
        "user", sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=True)
    )
    op.add_column("user", sa.Column("created_at", sa.DateTime(), nullable=False))
    op.drop_index("ix_user_username", table_name="user")
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=True)
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.create_index("ix_user_username", "user", ["username"], unique=False)
    op.drop_column("user", "created_at")
    op.drop_column("user", "status")
    op.drop_column("user", "language")
    op.drop_column("user", "timezone")
    op.drop_column("user", "profile_photo_url")
    op.drop_column("user", "gender")
    op.drop_column("user", "last_name")
    op.drop_column("user", "first_name")
    op.drop_column("user", "longitude")
    op.drop_column("user", "latitude")
    op.drop_column("user", "date_of_birth")
    op.drop_column("user", "personal_title")
    op.drop_column("user", "job_title")

    conn = op.get_bind()
    gender_enum.drop(conn)
    # ### end Alembic commands ###
